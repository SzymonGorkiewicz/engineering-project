name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.2.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Install dependencies (Frontend)
        working-directory: ./apps/frontend
        run: pnpm install

      - name: Install dependencies (Backend)
        working-directory: ./apps/backend
        run: pnpm install

      # - name: Run linter (Frontend)
      #   working-directory: ./apps/frontend
      #   run: pnpm run lint

      # - name: Run linter (Backend)
      #   working-directory: ./apps/backend
      #   run: pnpm run lint

      # - name: Run TypeScript check (Frontend)
      #   working-directory: ./apps/frontend
      #   run: pnpm exec tsc --noEmit

      # - name: Run TypeScript check (Backend)
      #   working-directory: ./apps/backend
      #   run: pnpm exec tsc --noEmit

      # - name: Build Next.js app
      #   working-directory: ./apps/frontend
      #   run: pnpm run build

      - name: Build NestJS app
        working-directory: ./apps/backend
        run: pnpm run build

      - name: Start PostgreSQL Database
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
          sudo service postgresql start
          PGPASSWORD="${{ secrets.DB_PASSWORD }}"
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD $PGPASSWORD;"
          sudo -u postgres createdb engineering_project 

      - name: Create .env file for NestJS
        working-directory: ./apps/backend
        run: |
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=engineering_project" >> .env

      - name: Start NestJS Application
        working-directory: ./apps/backend
        run: pnpm run start:dev &  

      - name: Start Next.js Application
        working-directory: ./apps/frontend
        run: pnpm run dev &  

      - name: Wait for applications to be ready
        run: sleep 30  # Czas oczekiwania na uruchomienie aplikacji

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://localhost:3000/'  # Upewnij się, że adres URL jest zgodny z tym, na którym działa Twoja aplikacja
   
